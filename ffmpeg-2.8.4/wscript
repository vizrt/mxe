#!/usr/bin/python

def configure(ctx):
    libraries = [
        "avcodec",
        "avdevice",
        "avfilter",
        "avformat",
        "avresample",
        "avutil",
        "swresample",
        "swscale"
    ]
    ctx.check(
        lib=libraries,
        libpath=ctx.path.find_node("lib").abspath(),
        header_name="libavformat/avformat.h",
        includes=[
            ctx.path.find_node("include").abspath(),
            ctx.path.find_node("extra/includes").abspath()
        ],
        uselib_store="ffmpeg"
    )

    SDL_FRAGMENT = """
        #include <SDL.h>
        #undef main

        int main(int argc, char* argv[])
        {
            return 0;
        }
    """

    ctx.check(
        fragment=SDL_FRAGMENT,
        lib="SDL",
        libpath=ctx.path.find_node("lib").abspath(),
        header_name="SDL.h",
        includes=[ ctx.path.find_node("include/SDL").abspath() ],
        uselib_store="sdl"
    )

    X264_FRAGMENT = """
        #include <inttypes.h>
        #include <x264.h>

        int main(int argc, char* argv[])
        {
            return 0;
        }
    """

    ctx.check(
        fragment=X264_FRAGMENT,
        lib="x264",
        libpath=ctx.path.find_node("lib").abspath(),
        header_name="x264.h",
        includes=[
            ctx.path.find_node("include").abspath(),
            ctx.path.find_node("extra/includes").abspath()
        ],
        uselib_store="x264"
    )


def build(ctx):
    for lib in ctx.path.find_node("bin").ant_glob("*"):
        tg = ctx(features="subst",
            is_copy=True,
            target=str(lib),
            source=lib,
            path=ctx.root.find_node(ctx.out_dir).make_node("bin"),
        )

        if hasattr(ctx.options, "bundle") and ctx.options.bundle:
            tg.install_path="${BINDIR}"
